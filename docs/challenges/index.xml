<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Ritchie â€“ Challenges</title><link>https://zupit.github.io/challenges/</link><description>Recent content in Challenges on Ritchie</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://zupit.github.io/challenges/index.xml" rel="self" type="application/rss+xml"/><item><title>Challenges: What are these challenges?</title><link>https://zupit.github.io/challenges/what-are-these-challenges/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zupit.github.io/challenges/what-are-these-challenges/</guid><description>
&lt;p>&amp;mdash;?&lt;/p>
&lt;h2 id="context">Context&lt;/h2>
&lt;p>The objective of this section is to help users to understand step by step several activities you are able to do with Richie.&lt;/p>
&lt;h3 id="premises">Premises&lt;/h3>
&lt;p>To perform the tasks in this section, it will be necessary to understand the following concepts:&lt;/p>
&lt;ol>
&lt;li>&lt;a href="../../../../../../tutorials/formulas/how-to-run-formulas/">&lt;strong>How to run formulas&lt;/strong>&lt;/a>&lt;/li>
&lt;li>&lt;a href="../../../../../tutorials/formulas/how-to-create-formulas">&lt;strong>How to create formulas&lt;/strong>&lt;/a>&lt;/li>
&lt;li>&lt;a href="../../../../tutorials/formulas/how-to-implement-a-formula/">&lt;strong>How to implement formulas&lt;/strong>&lt;/a>&lt;/li>
&lt;li>&lt;a href="../../../tutorials/formulas/how-to-build-formulas">&lt;strong>How to build formulas&lt;/strong>&lt;/a>&lt;/li>
&lt;li>&lt;a href="../../tutorials/formulas/how-to-group-formulas">&lt;strong>How to group formulas&lt;/strong>&lt;/a>&lt;/li>
&lt;/ol>
&lt;h3 id="challenges">Challenges&lt;/h3>
&lt;p>The &lt;strong>&lt;code>first challenge&lt;/code>&lt;/strong> is to understand how to manipulate basic inputs.&lt;/p>
&lt;p>The &lt;strong>&lt;code>second challenge&lt;/code>&lt;/strong> is to understand how to manipulate credentials inputs.&lt;/p>
&lt;p>The &lt;strong>&lt;code>third challenge&lt;/code>&lt;/strong> is to understand how to manipulate conditional inputs.&lt;/p>
&lt;p>The &lt;strong>&lt;code>fourth challenge&lt;/code>&lt;/strong> is to apply the formula aggregation concept.&lt;/p>
&lt;div class="alert alert-warning" role="alert">
We will add more challenging tasks in the future.&lt;br>
Check it out from time to time!
&lt;/div></description></item><item><title>Challenges: Level 1 Inputs</title><link>https://zupit.github.io/challenges/level-1-inputs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zupit.github.io/challenges/level-1-inputs/</guid><description>
&lt;h1 id="level-1-inputs">Level 1: Inputs&lt;/h1>
&lt;h2 id="objective">Objective&lt;/h2>
&lt;p>On this tutorial, the idea is to teach you how to create a formula on Ritchie that will &lt;strong>sum two positive numbers&lt;/strong>.&lt;/p>
&lt;div class="alert alert-info" role="alert">
Command suggestion: &lt;strong>&lt;code>rit math sum numbers&lt;/code>&lt;/strong>
&lt;/div>
&lt;h2 id="inputs">Inputs&lt;/h2>
&lt;p>This formula needs to contain (at least) those two inputs parameters, see below:&lt;/p>
&lt;ol>
&lt;li>Number one (&lt;code>RIT_NUMBER_ONE&lt;/code>).&lt;/li>
&lt;li>Number two (&lt;code>RIT_NUMBER_TWO&lt;/code>).&lt;/li>
&lt;/ol>
&lt;h2 id="step-by-step">Step by step&lt;/h2>
&lt;p>The formula needs to follow the next steps:&lt;/p>
&lt;ol>
&lt;li>Extract all inputs parameters.&lt;/li>
&lt;li>Convert inputs to integers (there is currently no &lt;em>&lt;strong>integer&lt;/strong>&lt;/em> &lt;code>type&lt;/code> in inputs config.json file).&lt;/li>
&lt;li>Sum both numbers.&lt;/li>
&lt;li>Return the result on the terminal.&lt;/li>
&lt;/ol>
&lt;div class="alert alert-success" role="alert">
Well done! You&amp;rsquo;ve completed the first task!
&lt;/div>
&lt;h2 id="improvement-suggestions">Improvement suggestions&lt;/h2>
&lt;p>If you want to play a little more, here are some suggestions:&lt;/p>
&lt;ul>
&lt;li>Add a validation of the input parameters to return an error to the user if the parameter is not an integer.&lt;/li>
&lt;li>Allow the user to sum negative numbers with positive ones.&lt;/li>
&lt;li>Allow the user to digit decimals in addition to integers.&lt;/li>
&lt;/ul>
&lt;h2 id="next-steps">Next steps&lt;/h2>
&lt;p>ðŸ‘‰ If you&amp;rsquo;ve completed the first challenge, let&amp;rsquo;s go to the &lt;a href="level-2-credentials">&lt;strong>level 2 task&lt;/strong>&lt;/a>!&lt;/p></description></item><item><title>Challenges: Level 2 Credentials</title><link>https://zupit.github.io/challenges/level-2-credentials/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zupit.github.io/challenges/level-2-credentials/</guid><description>
&lt;h1 id="level-2-credentials">Level 2: Credentials&lt;/h1>
&lt;h2 id="objective">Objective&lt;/h2>
&lt;p>Create a formula on Ritchie that will &lt;strong>return a JSON with Github credentials&lt;/strong>.&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>Note&lt;/strong>: The challenge consists in configure those inputs inside the &lt;strong>config.json&lt;/strong> file, but run the formula without informing them as &lt;code>prompt&lt;/code> or &lt;code>stdin&lt;/code> (they will be extracted automatically). You&amp;rsquo;ll find all the informations you need in the &lt;a href="https://docs.ritchiecli.io/how-to/manipulate-credentials">&lt;strong>how to manipulate credentials&lt;/strong>&lt;/a> tutorial section.&lt;/p>
&lt;/blockquote>
&lt;div class="alert alert-info" role="alert">
Command suggestion: &lt;strong>&lt;code>rit github get user&lt;/code>&lt;/strong>
&lt;/div>
&lt;h2 id="inputs">Inputs&lt;/h2>
&lt;p>This formula needs to contain (at least) those two inputs parameters:&lt;/p>
&lt;ul>
&lt;li>Username (&lt;code>RIT_GIT_USER&lt;/code>).&lt;/li>
&lt;li>Token ( &lt;code>RIT_GIT_TOKEN&lt;/code>).&lt;/li>
&lt;/ul>
&lt;h2 id="step-by-step">Step by step&lt;/h2>
&lt;p>The formula needs to follow the next steps:&lt;/p>
&lt;ol>
&lt;li>Extract all inputs parameters.&lt;/li>
&lt;li>Consume the &lt;a href="https://docs.github.com/en/free-pro-team@latest/rest/reference/users#get-a-user">&lt;strong>GitHub api&lt;/strong>&lt;/a> to get the user data.&lt;/li>
&lt;li>Return the result on the terminal.&lt;/li>
&lt;/ol>
&lt;h2 id="improvement-suggestions">Improvement suggestions&lt;/h2>
&lt;p>If you want to play a little more, here are some suggestions:&lt;/p>
&lt;ul>
&lt;li>Develop some Github operation by manipulating these credentials.&lt;/li>
&lt;li>Code a formula which will allow the user to create a repository on Github.&lt;/li>
&lt;li>Code a formula which will allow the user to &lt;strong>add&lt;/strong>, &lt;strong>commit&lt;/strong> and &lt;strong>push&lt;/strong> using only one command.&lt;/li>
&lt;li>Code a formula which will allow the user to generate a release of the informed Github repository.&lt;/li>
&lt;/ul>
&lt;h2 id="next-steps">Next steps&lt;/h2>
&lt;p>ðŸ‘‰ If you&amp;rsquo;ve completed the second challenge, let&amp;rsquo;s go to &lt;a href="level-3-conditional-inputs">&lt;strong>level 3 task&lt;/strong>&lt;/a>!&lt;/p></description></item><item><title>Challenges: Level 3 Conditional Inputs</title><link>https://zupit.github.io/challenges/level-3-conditional-inputs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zupit.github.io/challenges/level-3-conditional-inputs/</guid><description>
&lt;h1 id="level-3-conditional-inputs">Level 3: Conditional Inputs&lt;/h1>
&lt;h2 id="objective">Objective&lt;/h2>
&lt;p>Create a formula on Ritchie that will &lt;strong>return the tool selected by the user according to its profile&lt;/strong>.&lt;/p>
&lt;blockquote>
&lt;p>You&amp;rsquo;ll find all the information you need about the &lt;strong>conditional field&lt;/strong> on the &lt;a href="https://docs.ritchiecli.io/how-to/implement-a-formula#1-config-json">&lt;strong>config.json file section&lt;/strong>&lt;/a>.&lt;/p>
&lt;/blockquote>
&lt;div class="alert alert-info" role="alert">
Command suggestion: &lt;strong>&lt;code>rit get tools&lt;/code>&lt;/strong>
&lt;/div>
&lt;h2 id="inputs">Inputs&lt;/h2>
&lt;p>This formula needs to contain (at least) those two inputs parameters:&lt;/p>
&lt;ul>
&lt;li>Profile (&lt;code>RIT_PROFILE&lt;/code>).&lt;/li>
&lt;li>Profile tool (&lt;code>RIT_TOOL&lt;/code>).&lt;/li>
&lt;/ul>
&lt;p>The formula inputs will have to respect the diagram below:&lt;/p>
&lt;p>&lt;img src="https://zupit.github.io/ritchie-conditional-inputs.png" alt="">&lt;/p>
&lt;h2 id="step-by-step">Step by step&lt;/h2>
&lt;p>The formula needs to follow the next steps:&lt;/p>
&lt;ol>
&lt;li>Extract all inputs parameters.&lt;/li>
&lt;li>Return the selected profile on the terminal.&lt;/li>
&lt;li>Return the selected tool on the terminal.&lt;/li>
&lt;/ol>
&lt;h2 id="improvement-suggestions">Improvement suggestions&lt;/h2>
&lt;p>If you want to play a little more, here are some suggestions:&lt;/p>
&lt;ul>
&lt;li>Install the selected tool according to the computer OS.&lt;/li>
&lt;/ul>
&lt;h2 id="next-steps">Next steps&lt;/h2>
&lt;p>ðŸ‘‰ If you&amp;rsquo;ve completed the third challenge, let&amp;rsquo;s go to the &lt;a href="level-4-aggregation">&lt;strong>level 4 task&lt;/strong>&lt;/a>!&lt;/p></description></item><item><title>Challenges: Level 4 Aggregation</title><link>https://zupit.github.io/challenges/level-4-aggregation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zupit.github.io/challenges/level-4-aggregation/</guid><description>
&lt;h1 id="level-4-aggregation">Level 4: Aggregation&lt;/h1>
&lt;h2 id="objective">Objective&lt;/h2>
&lt;p>Create a formula on Ritchie that will &lt;strong>execute another formula inside it.&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>You&amp;rsquo;ll find all the informations you need in the &lt;a href="../../tutorials/formulas/how-to-group-formulas">&lt;strong>how to group formulas&lt;/strong>&lt;/a> tutorial section.&lt;/p>
&lt;/blockquote>
&lt;p>The idea is to group at least 2 formulas inside another one:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>&lt;code>rit math sum numbers&lt;/code>&lt;/strong> (Level 1)&lt;/li>
&lt;li>&lt;strong>&lt;code>rit math multiply numbers&lt;/code>&lt;/strong> (TODO)&lt;/li>
&lt;/ul>
&lt;div class="alert alert-info" role="alert">
Command suggestion: &lt;strong>&lt;code>rit math calculate&lt;/code>&lt;/strong>
&lt;/div>
&lt;h2 id="inputs">Inputs&lt;/h2>
&lt;p>This formula needs to contain (at least) those three inputs parameters:&lt;/p>
&lt;ol>
&lt;li>Number one (&lt;code>RIT_UMBER_ONE&lt;/code>).&lt;/li>
&lt;li>Number two (&lt;code>RIT_NUMBER_TWO&lt;/code>).&lt;/li>
&lt;li>Operation (&lt;code>RIT_OPERATION&lt;/code>).&lt;/li>
&lt;/ol>
&lt;h2 id="step-by-step">Step by step&lt;/h2>
&lt;p>To implement this formula, it will be necessary to follow the steps below:&lt;/p>
&lt;p>&lt;strong>Premisse:&lt;/strong> Creation of the &lt;strong>&lt;code>rit math multiply numbers&lt;/code>&lt;/strong> formula (same as level 1).&lt;/p>
&lt;ol>
&lt;li>Extract all inputs parameters.&lt;/li>
&lt;li>Execute the grouped formula according to the selected operation:
&lt;ul>
&lt;li>&lt;strong>multiply&lt;/strong> should call &lt;strong>&lt;code>rit math multiply numbers&lt;/code>&lt;/strong>&lt;/li>
&lt;li>&lt;strong>sum&lt;/strong> should call &lt;strong>&lt;code>rit math sum numbers&lt;/code>&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Return the result on the terminal.&lt;/li>
&lt;/ol>
&lt;h2 id="improvement-suggestions">Improvement suggestions&lt;/h2>
&lt;p>If you want to play a little more, here are some suggestions:&lt;/p>
&lt;ul>
&lt;li>Add more operations.&lt;/li>
&lt;li>Add the option to inform any quantity of numbers as inputs.&lt;/li>
&lt;/ul></description></item></channel></rss>