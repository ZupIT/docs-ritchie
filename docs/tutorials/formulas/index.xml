<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Ritchie – Formulas</title><link>https://zupit.github.io/tutorials/formulas/</link><description>Recent content in Formulas on Ritchie</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://zupit.github.io/tutorials/formulas/index.xml" rel="self" type="application/rss+xml"/><item><title>Tutorials: How to run formulas</title><link>https://zupit.github.io/tutorials/formulas/how-to-run-formulas/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zupit.github.io/tutorials/formulas/how-to-run-formulas/</guid><description>
&lt;hr>
&lt;h2 id="how-to-run">How to run?&lt;/h2>
&lt;p>There are two ways to run formulas on Ritchie :&lt;/p>
&lt;ol>
&lt;li>Locally&lt;/li>
&lt;li>Using Docker&lt;/li>
&lt;/ol>
&lt;p>The &lt;strong>default formulas execution method&lt;/strong> has been defined during the initialization step with the**&lt;code>rit init&lt;/code>**command. It can be changed executing the following command:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">rit set formula-runner
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://zupit.github.io/large-gif-1374x404-.gif" alt="rit set formula-runner command">&lt;/p>
&lt;h3 id="1-locally">1. Locally&lt;/h3>
&lt;p>To run a formula locally it is necessary to have the formula programming languages dependencies installed on the computer.&lt;/p>
&lt;p>&lt;strong>Example&lt;/strong>: a formula written in &lt;strong>Node&lt;/strong> will need &lt;strong>Node installed&lt;/strong> on the computer, so it will be able to run locally.&lt;/p>
&lt;h3 id="2-through-docker">2. Through Docker&lt;/h3>
&lt;p>All formulas can run regardless the programming language used from the moment you have &lt;strong>&lt;code>DOCKER&lt;/code>&lt;/strong> installed and running.&lt;/p>
&lt;div class="alert alert-info" role="alert">
Check out on the following example &lt;a href="hello-world-formula">&lt;strong>how to run a &amp;ldquo;Hello World&amp;rdquo; formula&lt;/strong> &lt;/a>
&lt;/div>
&lt;h3 id="3-local--docker-flags">3. Local &amp;amp; Docker Flags&lt;/h3>
&lt;p>You can force Ritchie CLI to execute a formula with a specific method using flags.&lt;/p>
&lt;ul>
&lt;li>The &lt;strong>&lt;code>--local&lt;/code>&lt;/strong> flag will execute a formula with locally (if the default method is Docker).&lt;/li>
&lt;li>The &lt;strong>&lt;code>--docker&lt;/code>&lt;/strong> flag will execute a formula with Docker (if the default method is local).&lt;/li>
&lt;/ul>
&lt;h3 id="4-containers-with-ritchie">4. Containers with Ritchie&lt;/h3>
&lt;div class="alert alert-warning" role="alert">
All formulas templates contain a &lt;strong>Dockerfile&lt;/strong> which creates a container with &lt;strong>Ritchie CLI&lt;/strong> installed.
&lt;/div>
&lt;h2 id="next-steps">Next steps&lt;/h2>
&lt;p>On this section, you saw how to run a formula on Ritchie. To keep learning:&lt;/p>
&lt;p>👉 Go to &lt;a href="hello-world-formula">&lt;strong>Hello World formula&lt;/strong>&lt;/a> to see different ways to run a formula on Ritchie.&lt;/p>
&lt;p>👉 Go to the &lt;a href="../../how-to-create-formulas">&lt;strong>create formulas&lt;/strong>&lt;/a> section to understand how to create your first automation with Ritchie.&lt;/p></description></item><item><title>Tutorials: How to create formulas</title><link>https://zupit.github.io/tutorials/formulas/how-to-create-formulas/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zupit.github.io/tutorials/formulas/how-to-create-formulas/</guid><description>
&lt;hr>
&lt;h2 id="how-to-create">How to create?&lt;/h2>
&lt;h3 id="step-1-run-the-formula-creation-command">Step 1: Run the formula creation command&lt;/h3>
&lt;p>Run the following command to create a formula:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">rit create formula
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then, you&amp;rsquo;ll have to inform those inputs before running the formula:&lt;/p>
&lt;ol>
&lt;li>The &lt;strong>command&lt;/strong> (following the &lt;strong>pattern &lt;code>rit + group + verb + noun&lt;/code>&lt;/strong> to respect the &lt;a href="https://docs.ritchiecli.io/key-concepts#command-tree">&lt;strong>tree pattern&lt;/strong>&lt;/a>).&lt;/li>
&lt;li>The formula&amp;rsquo;s &lt;strong>programming language&lt;/strong>.&lt;/li>
&lt;li>&lt;strong>The path&lt;/strong> used to save formula&amp;rsquo;s files.&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>Example:&lt;/strong> &lt;code>rit demo create formula&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://zupit.github.io/rit_create_formula_demo.gif" alt="Example of running rit create formula command">&lt;/p>
&lt;h3 id="step-2-test-your-formula">&lt;strong>Step 2: Test your formula&lt;/strong>&lt;/h3>
&lt;p>You can test the formula directly after its creation. That&amp;rsquo;s possible because the &lt;strong>&lt;code>rit create formula&lt;/code>&lt;/strong> command also builds the formula automatically (it generates the formula&amp;rsquo;s executable files and add them on &lt;strong>.rit folder&lt;/strong>).&lt;/p>
&lt;p>In that case, the formula &lt;strong>&amp;ldquo;Hello World&amp;rdquo; template&lt;/strong> will be executed as shown below:&lt;/p>
&lt;p>&lt;img src="https://zupit.github.io/rit_demo_hello-world_hd.gif" alt="Exemplo demo de f&amp;#xF3;rmula &amp;quot;Hello-World&amp;quot;">&lt;/p>
&lt;p>This template is composed of 4 &lt;strong>inputs parameters&lt;/strong>, that represents the currently available kinds of inputs to use Ritchie:&lt;/p>
&lt;ol>
&lt;li>A &lt;strong>&lt;code>sample text&lt;/code>&lt;/strong> variable&lt;/li>
&lt;li>A &lt;strong>&lt;code>sample list&lt;/code>&lt;/strong> of text variables&lt;/li>
&lt;li>A &lt;strong>&lt;code>sample boolean&lt;/code>&lt;/strong> variable&lt;/li>
&lt;li>A &lt;strong>&lt;code>sample password&lt;/code>&lt;/strong> variable&lt;/li>
&lt;/ol>
&lt;p>When you finished your formula creation, it will be built and sent to a specific repository according to the name of your workspace with the prefix &lt;strong>&amp;ldquo;local&amp;rdquo;.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Example:&lt;/strong> if we have a workspace with the name &lt;code>Default&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">{
&amp;#34;Default&amp;#34;:&amp;#34;/home/user/ritchie-formula-local&amp;#34;
}
&lt;/code>&lt;/pre>&lt;/div>&lt;p>A repository associated to this workspace will be created on the &lt;code>/home/user/.rit/repos&lt;/code> folder, and added on the &lt;code>repositories.json&lt;/code> file.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">[
{
&amp;#34;provider&amp;#34;: &amp;#34;Local&amp;#34;,
&amp;#34;name&amp;#34;: &amp;#34;local-default&amp;#34;,
&amp;#34;version&amp;#34;: &amp;#34;0.0.0&amp;#34;,
&amp;#34;url&amp;#34;: &amp;#34;local repository&amp;#34;,
&amp;#34;priority&amp;#34;: 0,
&amp;#34;isLocal&amp;#34;: true
}
]
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="next-steps">Next steps&lt;/h2>
&lt;p>On this section, you saw how to create a formula on Ritchie and test it. To keep configuring the formula:&lt;/p>
&lt;p>👉 Go to &lt;a href="how-to-implement-a-formula/">&lt;strong>implement a formula&lt;/strong>&lt;/a> to understand how to edit the files Ritchie creates after formula creation.&lt;/p>
&lt;p>👉 Go to &lt;a href="how-to-build-formulas">&lt;strong>build a formula&lt;/strong>&lt;/a> to see how to continue the tests on the formulas you create.&lt;/p></description></item><item><title>Tutorials: How to implement formulas</title><link>https://zupit.github.io/tutorials/formulas/how-to-implement-formulas/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zupit.github.io/tutorials/formulas/how-to-implement-formulas/</guid><description>
&lt;hr>
&lt;h2 id="how-to-implement">How to implement?&lt;/h2>
&lt;p>Once you have &lt;a href="../../../../how-to-create-formulas">&lt;strong>created and tested your formula&lt;/strong>&lt;/a>, Ritchie will generate a local workspace. This is where you can start implementing the new automation by updating the &lt;strong>Hello World&lt;/strong> template.&lt;/p>
&lt;p>See below explanations about a formula editable files and all the flexibility offered by Ritchie&amp;rsquo;s structure:&lt;/p>
&lt;h2 id="next-steps">Next steps&lt;/h2>
&lt;p>On this section, you saw how to implement a formula on Ritchie. To keep configuring the formula:&lt;/p>
&lt;p>👉 Go to &lt;a href="../../../how-to-build-formulas">&lt;strong>build a formula&lt;/strong>&lt;/a> to see how to continue the tests on the formulas you create.&lt;/p>
&lt;p>👉 Go to &lt;a href="../../how-to-publish-formulas">&lt;strong>publish a formula&lt;/strong>&lt;/a> to see how to transfer your work to a public repository.&lt;/p></description></item><item><title>Tutorials: How to build formulas</title><link>https://zupit.github.io/tutorials/formulas/how-to-build-formulas/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zupit.github.io/tutorials/formulas/how-to-build-formulas/</guid><description>
&lt;hr>
&lt;div class="alert alert-danger" role="alert">
&lt;p>This functionality is no longer available from &lt;strong>Ritchie&amp;rsquo;s 2.5.0 version&lt;/strong>. From now on, a formula build is automatically made on your CLI: a local repo file will be created as soon as you implement the formula to host it.&lt;/p>
&lt;p>If you&amp;rsquo;re using a previous version just follow the instructions of this section.&lt;/p>
&lt;/div>
&lt;h2 id="how-to-build">How to build?&lt;/h2>
&lt;p>After &lt;a href="how-to-create-formulas">&lt;strong>creating a formula&lt;/strong>&lt;/a>, if you want to edit the code of the formula, it&amp;rsquo;s necessary to &lt;strong>build&lt;/strong> these changes to test the command with the new implementation.&lt;/p>
&lt;p>To do so, just run the command:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">rit build formula
&lt;/code>&lt;/pre>&lt;/div>&lt;p>You must inform:&lt;/p>
&lt;ul>
&lt;li>The &lt;strong>directory&amp;rsquo;s path&lt;/strong> where the formula is located.&lt;/li>
&lt;li>The &lt;strong>formula&amp;rsquo;s path&lt;/strong> to be builded (the formula&amp;rsquo;s command).&lt;/li>
&lt;/ul>
&lt;p>In case you want to update the formula&amp;rsquo;s code in running time, you can use the &lt;strong>flag “&amp;ndash;watch”&lt;/strong> as shown in the command below:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">rit build formula --watch
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="next-steps">Next steps&lt;/h2>
&lt;p>On this section, you saw how to implement a formula on Ritchie. To keep configuring the formula:&lt;/p>
&lt;p>👉 Go to &lt;a href="how-to-publish-formulas">&lt;strong>publish a formula&lt;/strong>&lt;/a> to see how to transfer your work to a public repository.&lt;/p></description></item><item><title>Tutorials: How to publish formulas</title><link>https://zupit.github.io/tutorials/formulas/how-to-publish-formulas/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zupit.github.io/tutorials/formulas/how-to-publish-formulas/</guid><description>
&lt;hr>
&lt;h2 id="how-to-publish">How to publish?&lt;/h2>
&lt;p>There is a formula on Ritchie that allows the user to create / update a formula repository on Github / Gitlab.&lt;/p>
&lt;h3 id="premisses">Premisses&lt;/h3>
&lt;div class="alert alert-warning" role="alert">
To publish your formula, make sure to set Github / Gitlab credentials using the**&lt;code>rit set credential&lt;/code>** command.
&lt;/div>
&lt;h2 id="publish-your-repository">Publish your repository&lt;/h2>
&lt;p>A formula has been created on the community repository to perform:&lt;/p>
&lt;ul>
&lt;li>The initialization of a local repository on Git (if necessary),&lt;/li>
&lt;li>The creation of the repository on Github / Gitlab,&lt;/li>
&lt;li>The release generation of a new version of the repository,&lt;/li>
&lt;li>The addition of the repository to Ritchie local repositories (**&lt;code>rit add repo&lt;/code>**command).&lt;/li>
&lt;/ul>
&lt;div class="alert alert-info" role="alert">
Moreover, if the repository already exists, it will commit the new code and generate the new release version informed, before updating Ritchie repositories (**&lt;code>rit update repo&lt;/code>**command).
&lt;/div>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">rit publish repo
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The user has to inform 5 different kinds of inputs:&lt;/p>
&lt;ol>
&lt;li>The &lt;strong>&lt;code>provider&lt;/code>&lt;/strong> (Github or Gitlab)&lt;/li>
&lt;li>The &lt;strong>&lt;code>repository's privacy&lt;/code>&lt;/strong>&lt;/li>
&lt;li>The &lt;strong>&lt;code>repository's name&lt;/code>&lt;/strong>&lt;/li>
&lt;li>The &lt;strong>&lt;code>local repository path&lt;/code>&lt;/strong> you wish to publish&lt;/li>
&lt;li>The &lt;strong>&lt;code>release version&lt;/code>&lt;/strong> to generate&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://zupit.github.io/rit-publish-repo.gif" alt="rit publish repo command">&lt;/p>
&lt;div class="alert alert-warning" role="alert">
As shown on the example above, you can check if the publication has been successful by using the &lt;strong>&lt;code>rit list repo&lt;/code>&lt;/strong> command and see if the published repository appears.
&lt;/div>
&lt;h2 id="publish-manually">Publish manually&lt;/h2>
&lt;p>To publish a formula manually, you need to push it on a &lt;strong>Github / Gitlab&lt;/strong> repository, following these steps:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Have an exclusive repository for formulas on Github / Gitlab.&lt;/p>
&lt;p>&lt;em>It can be created from the a local repository, or based on a cloned repository.&lt;/em>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Add your formulas to the repository _Using the**&lt;code>rit create formula&lt;/code>** command, or **copy / paste** folders_&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Commit and push the new code to the Github / Gitlab repository.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Generate a new release of the formulas repository.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="next-steps">Next steps&lt;/h2>
&lt;p>On this section, you saw how to publish a formula on Ritchie. To keep configuring the formula:&lt;/p>
&lt;p>👉 Check out &lt;a href="how-to-share-formulas">&lt;strong>how to share formulas&lt;/strong>&lt;/a>&lt;/p></description></item><item><title>Tutorials: How to share formulas</title><link>https://zupit.github.io/tutorials/formulas/how-to-share-formulas/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zupit.github.io/tutorials/formulas/how-to-share-formulas/</guid><description>
&lt;hr>
&lt;h2 id="how-to-share">How to share?&lt;/h2>
&lt;p>Once a formula repository has been published, other users can add it locally from its &lt;strong>URL&lt;/strong> to access its formulas.&lt;/p>
&lt;p>&lt;strong>Example**: &lt;/strong>&lt;code>https://github.com/ZupIT/ritchie-formulas&lt;/code>**&lt;a href="https://github.com/ZupIT/ritchie-formulas">&lt;/a>&lt;/p>
&lt;p>To add a new repository on Ritchie, it is necessary to run the command:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">rit add repo
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Once the repository has been added, Ritchie will use the selected release on the repository to access the available formulas.&lt;/p>
&lt;p>&lt;img src="https://zupit.github.io/rit-add-repo-3.gif" alt="rit add repo command demonstration">&lt;/p>
&lt;div class="alert alert-warning" role="alert">
If the formula repository is &lt;strong>private&lt;/strong>, the user will have to inform his Github / Gitlab token.
&lt;/div>
&lt;h2 id="how-to-see-the-repo-latest-version">How to see the repo latest version?&lt;/h2>
&lt;div class="alert alert-info" role="alert">
This feature is available from Ritchie 2.2 version.
&lt;/div>
&lt;p>On Ritchie, it is possible to check out new formula commands and if there is a new version of some repository you added locally.&lt;/p>
&lt;p>To do so, just follow these steps:&lt;/p>
&lt;ol>
&lt;li>Run the help command**&lt;code>rit --help&lt;/code>**. The system will return a list with the group of available repositories.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">(new version 2.12.1) commons repo commands:
beagle Beagle commands
bitbucket Manage bitbucket objects
clean-swift Manage clean-swift objects
docker Manipulate Docker objects
git Manipulate Git objects
github Manipulate GitHub objects
gitlab Manipulate GitLab objects
istio Istio Service Mesh commands
jupyter Manage jupyter objects
kafka Kafka commands
kubernetes Manipulate kubernetes objects
publish Publish command
scaffold Manipulate scaffold objects
xcode Manage xcode objects
&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>If you prefer, run the &lt;strong>&lt;code>rit list repo&lt;/code>&lt;/strong> command, that returns informations about the imported repositories, like the latest version and the last available version.&lt;/li>
&lt;/ol>
&lt;h3 id="how-to-update">How to update?&lt;/h3>
&lt;p>To update the version of any repository, you just have to run the command below informing the repository and the version you wish to be updated.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">rit update repo
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="next-steps">Next steps&lt;/h2>
&lt;p>On this section, you saw how to share a formula on Ritchie. To keep configuring the formula:&lt;/p>
&lt;p>👉 Check out how to &lt;a href="https://docs.ritchiecli.io/how-to/manipulate-credentials">&lt;strong>manipulate credentials&lt;/strong>&lt;/a> with your formulas.&lt;/p>
&lt;p>👉 Check out our &lt;a href="../../../reference/list-of-commands-and-flags">&lt;strong>list of commands&lt;/strong>&lt;/a> to see the available automations on our community repo.&lt;/p></description></item><item><title>Tutorials: How to delete formulas</title><link>https://zupit.github.io/tutorials/formulas/how-to-delete-formulas/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zupit.github.io/tutorials/formulas/how-to-delete-formulas/</guid><description>
&lt;hr>
&lt;h2 id="how-to-delete">How to delete?&lt;/h2>
&lt;p>To delete a formula, you just have to run this command:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">rit delete formula
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Once you&amp;rsquo;ve made this, follow the steps:&lt;/p>
&lt;p>&lt;strong>Step 1:&lt;/strong> Select the workspace where is the formula you want to delete.&lt;/p>
&lt;p>&lt;strong>Step 2:&lt;/strong> Select the formula to be deleted.&lt;/p>
&lt;p>&lt;strong>Step 3:&lt;/strong> The Ritchie will ask you to confirm if you wish to continue the operation to delete the formula. Just select the answer &amp;ldquo;yes&amp;rdquo;.&lt;/p>
&lt;p>&lt;img src="https://zupit.github.io/delete-formula.gif" alt="">&lt;/p>
&lt;h2 id="next-steps">Next Steps&lt;/h2>
&lt;p>On this section, you saw how to delete a formula on Ritchie. To keep reading:&lt;/p>
&lt;p>👉 Go to &lt;a href="how-to-group-formulas">&lt;strong>how to group formulas&lt;/strong>&lt;/a> section to find out how to run a formula inside another formula.&lt;/p>
&lt;p>👉 Check out all the available formulas on Ritchie in the &lt;a href="../../../reference/list-of-commands-and-flags">&lt;strong>list of commands and flags&lt;/strong>&lt;/a>&lt;/p></description></item><item><title>Tutorials: How to group formulas</title><link>https://zupit.github.io/tutorials/formulas/how-to-group-formulas/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zupit.github.io/tutorials/formulas/how-to-group-formulas/</guid><description>
&lt;hr>
&lt;h2 id="what-is-an-aggregation">What is an aggregation?&lt;/h2>
&lt;p>On Ritchie, it is possible to &lt;strong>run formulas inside formulas.&lt;/strong> This process is what we call **Formula aggregation.**‌&lt;/p>
&lt;p>This functionality allows you, for example, to make operations in which you need to run consecutive formulas.&lt;/p>
&lt;p>Check out on the following topics how works this aggregation.&lt;/p>
&lt;h2 id="how-to-group">How to group?&lt;/h2>
&lt;h3 id="1-premisse">1. Premisse&lt;/h3>
&lt;p>To group formulas, it is necessary to use &lt;strong>Standard Inputs&lt;/strong>. On the following page, we have a detailed explanation to how this works:&lt;/p>
&lt;h3 id="2-execution-a-id2-executiona">2. Execution &lt;a id="2-execution">&lt;/a>&lt;/h3>
&lt;p>When &lt;a href="https://app.gitbook.com/@zup-products/s/ritchie/~/diff/drafts/-MHIAf91S1RlTOvJs_KU/how-to/implement-a-formula/@drafts">&lt;strong>implementing a formula&lt;/strong>&lt;/a>, the file where the operation is coded needs to execute a command line associated to a formula.‌&lt;/p>
&lt;p>The grouped formula command line needs to be executed using &lt;strong>Standard Inputs&lt;/strong>, which means informing the inputs parameters directly on the code.‌&lt;/p>
&lt;h3 id="3-example-a-id3-examplea">3. Example &lt;a id="3-example">&lt;/a>&lt;/h3>
&lt;p>The &lt;strong>&lt;code>rit publish repo&lt;/code>&lt;/strong> formula has been implemented using formula aggregation, that you can find its &lt;a href="https://github.com/ZupIT/ritchie-formulas/tree/master/publish/repo">&lt;strong>formula implementation&lt;/strong>&lt;/a>.&lt;/p>
&lt;p>On the example below, you&amp;rsquo;ll find below how this aggregation works on the code part, using &lt;strong>&lt;code>Input flags&lt;/code>&lt;/strong>.&lt;/p>
&lt;div class="alert alert-warning" role="alert">
This formula has been implemented using **&lt;code>Shell&lt;/code>**and the reasoning would be the same for any other programming language.
&lt;/div>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">runFormula() {
if [ &amp;#34;Github&amp;#34; == $PROVIDER ]
then
echo &amp;#34;🐙 Github provider selected&amp;#34;
rit github publish repo --privacy=$PRIVACY --project_name=$PROJECT_NAME --workspace_path=$WORKSPACE_PATH --version=$VERSION
elif [ &amp;#34;Gitlab&amp;#34; == $PROVIDER ]
then
echo &amp;#34;🦊 Gitlab provider selected&amp;#34;
rit gitlab publish repo --privacy=$PRIVACY --project_name=$PROJECT_NAME --workspace_path=$WORKSPACE_PATH --version=$VERSION
else
echo &amp;#34;🤖 Unexpected Provider informed. Check it please and try again.&amp;#34;
fi
}
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Here, according to the input informed by the user, two different formulas can be executed:‌&lt;/p>
&lt;ul>
&lt;li>&lt;strong>&lt;code>rit github publish repo&lt;/code>&lt;/strong>&lt;/li>
&lt;li>&lt;strong>&lt;code>rit gitlab publish repo&lt;/code>&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>To do so, the grouped formulas inputs parameters are informed dynamically according to the inputs parameters of the main formula (&lt;strong>&lt;code>rit publish repo&lt;/code>&lt;/strong>).&lt;/p>
&lt;p>Depending on the operation, the &lt;strong>&lt;code>input flags&lt;/code>&lt;/strong> used for the command could be generated according to other operations performed through the formula execution before executing the grouped formula command line.‌&lt;/p>
&lt;h2 id="next-steps-a-idnext-stepsa">Next steps &lt;a id="next-steps">&lt;/a>&lt;/h2>
&lt;p>You saw in this section how to use formula aggregation. If you want to keep reading about Ritchie&amp;rsquo;s commands:‌&lt;/p>
&lt;p>​👉 Check out the &lt;a href="../../../../challenges/what-are-these-challenges">&lt;strong>challenges&lt;/strong>&lt;/a> we created to apply all the Ritchie concepts you learned.‌&lt;/p>
&lt;p>​👉 Check out our &lt;a href="../../../reference/list-of-commands-and-flags">&lt;strong>list of commands&lt;/strong>&lt;/a> to see the available automations on our community repo.&lt;/p></description></item></channel></rss>