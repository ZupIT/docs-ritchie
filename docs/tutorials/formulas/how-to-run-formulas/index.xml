<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Ritchie â€“ How to run formulas</title><link>https://zupit.github.io/tutorials/formulas/how-to-run-formulas/</link><description>Recent content in How to run formulas on Ritchie</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://zupit.github.io/tutorials/formulas/how-to-run-formulas/index.xml" rel="self" type="application/rss+xml"/><item><title>Tutorials: Hello World formula</title><link>https://zupit.github.io/tutorials/formulas/how-to-run-formulas/hello-world-formula/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zupit.github.io/tutorials/formulas/how-to-run-formulas/hello-world-formula/</guid><description>
&lt;hr>
&lt;h2 id="hello-world">Hello World&lt;/h2>
&lt;div class="alert alert-warning" role="alert">
&lt;strong>Premisse&lt;/strong>: After you finished the previous steps -&lt;a href="../../../getting-started/install-cli/">&lt;strong>installation&lt;/strong>&lt;/a> and &lt;a href="../../../getting-started/initialize-cli">&lt;strong>initialization&lt;/strong>&lt;/a> - to access the &lt;a href="https://github.com/ZupIT/ritchie-formulas/tree/master/demo/hello-world">&lt;strong>hello-world formula&lt;/strong>&lt;/a> to test Ritchie, you&amp;rsquo;ll need to add the &lt;a href="https://github.com/ZupIT/ritchie-formulas-demo">&lt;strong>ritchie-formulas-demo&lt;/strong>&lt;/a> repository &lt;strong>&lt;code>locally&lt;/code>&lt;/strong>.
&lt;/div>
&lt;p>To do so, you can use the &lt;strong>&lt;code>rit add repo&lt;/code>&lt;/strong> command, or execute the command line below:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">echo &amp;#39;{&amp;#34;provider&amp;#34;:&amp;#34;Github&amp;#34;, &amp;#34;name&amp;#34;:&amp;#34;demo&amp;#34;, &amp;#34;url&amp;#34;:&amp;#34;https://github.com/ZupIT/ritchie-formulas-demo&amp;#34;, &amp;#34;priority&amp;#34;:1}&amp;#39; | rit add repo --stdin
&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-info" role="alert">
You can also check which repositories you&amp;rsquo;re using with the**&lt;code>rit list repo&lt;/code>** command.
&lt;/div>
&lt;p>&lt;strong>Now that you have added the &lt;code>demo&lt;/code> repository and check the details of the formula, you can execute this tutorial commands.&lt;/strong>&lt;/p>
&lt;h3 id="premisse-check-the-formulas-details">&lt;strong>Premisse: Check the formula&amp;rsquo;s details&lt;/strong>&lt;/h3>
&lt;p>To get details about a formula, you can execute the command using with the &lt;code>--help&lt;/code> flag:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">rit demo hello-world --help
&lt;/code>&lt;/pre>&lt;/div>&lt;p>It will return all the flags available for the command execution.&lt;/p>
&lt;h4 id="on-ritchie-you-have-6-possibilities-to-run-a-formula-through-those-flags">On Ritchie, you have 6 possibilities to run a formula through those flags:&lt;/h4>
&lt;ol>
&lt;li>Using Prompt&lt;/li>
&lt;li>Using Prompt and Docker&lt;/li>
&lt;li>Using Input Flags&lt;/li>
&lt;li>Using Input Flags and Docker&lt;/li>
&lt;li>Using Stdin&lt;/li>
&lt;li>Using Stdin and Docker&lt;/li>
&lt;/ol>
&lt;p>To do so, type the following commands lines:&lt;/p>
&lt;h3 id="case-1-with-prompt">Case 1: With Prompt&lt;/h3>
&lt;div class="alert alert-warning" role="alert">
As &lt;strong>this formula has been coded using Golang&lt;/strong>, it is necessary to have &lt;strong>Golang&lt;/strong> installed on your computer to run it &lt;strong>locally&lt;/strong>.
&lt;/div>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">rit demo hello-world
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Select an option for each input parameter and see how the magic works:&lt;/p>
&lt;p>&lt;img src="https://zupit.github.io/large-gif-1054x366-%20%281%29.gif" alt="rit demo hello-world">&lt;/p>
&lt;p>This is the default command line execution, that runs the formula locally using &lt;strong>prompt&lt;/strong> to inform the input parameters.&lt;/p>
&lt;h3 id="case-2-with-prompt-and-docker">Case 2: With Prompt and Docker&lt;/h3>
&lt;p>You can run the same command using the &lt;strong>&amp;ndash;docker&lt;/strong> flag to execute it remotely (on a container), but still using &lt;strong>prompt&lt;/strong> to inform the inputs parameters:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">rit demo hello-world --docker
&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-warning" role="alert">
&lt;strong>Docker&lt;/strong> needs to be installed and running on your computer for this flag to work.
In that case, you won&amp;rsquo;t need to have &lt;strong>Golang&lt;/strong> installed.
&lt;/div>
&lt;h3 id="case-3-with-input-flags">Case 3: With Input Flags&lt;/h3>
&lt;p>You can also run the command informing the inputs through flags (you can know which flags are available using the &lt;strong>&lt;code>--help&lt;/code>&lt;/strong> flag when executing a command). This way, inputs parameters are informed directly with the command line.&lt;/p>
&lt;pre>&lt;code>rit demo hello-world --rit_input_text=Dennis --rit_input_boolean=true --rit_input_list=everything --rit_input_password=Ritchie
&lt;/code>&lt;/pre>&lt;h3 id="case-4-with-input-flags-and-docker">Case 4: With Input flags and Docker&lt;/h3>
&lt;p>When you combine both &lt;strong>&lt;code>input flags&lt;/code>&lt;/strong> and the &lt;strong>&lt;code>--docker&lt;/code>&lt;/strong> flag, it is possible to run a command remotely (on a container) with the input parameters directly informed on the command line:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">rit demo hello-world --rit_input_text=Dennis --rit_input_boolean=true --rit_input_list=everything --rit_input_password=Ritchie --docker
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="case-5-with-stdin">Case 5: With Stdin&lt;/h3>
&lt;p>You can also run the command with the &lt;strong>&amp;ndash;stdin&lt;/strong> (Standard input) flag. This way, inputs parameters are also informed directly with the command line.&lt;/p>
&lt;pre>&lt;code>echo '{&amp;quot;rit_input_text&amp;quot;:&amp;quot;Dennis&amp;quot;, &amp;quot;rit_input_boolean&amp;quot;:&amp;quot;true&amp;quot;, &amp;quot;rit_input_list&amp;quot;:&amp;quot;everything&amp;quot;, &amp;quot;rit_input_password&amp;quot;:&amp;quot;Ritchie&amp;quot;}' | rit demo hello-world --stdinRitchie uses the json format to execute STDIN commands
&lt;/code>&lt;/pre>
&lt;div class="alert alert-warning" role="alert">
Ritchie uses the &lt;strong>JSON&lt;/strong> format to execute STDIN commands
&lt;/div>
&lt;h3 id="case-6-with-stdin-and-docker">Case 6: With Stdin and Docker&lt;/h3>
&lt;p>When you combine both &lt;strong>&amp;ndash;stdin&lt;/strong> and &lt;strong>&amp;ndash;docker&lt;/strong> flags, it is also possible to run a command remotely (on a container) with the input parameters directly informed on the command line:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">echo &amp;#39;{&amp;#34;rit_input_text&amp;#34;:&amp;#34;Dennis&amp;#34;, &amp;#34;rit_input_boolean&amp;#34;:&amp;#34;true&amp;#34;, &amp;#34;rit_input_list&amp;#34;:&amp;#34;everything&amp;#34;, &amp;#34;rit_input_password&amp;#34;:&amp;#34;Ritchie&amp;#34;}&amp;#39; | rit demo hello-world --stdin --docker
&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-info" role="alert">
&lt;p>Take a look at the formulas repositories (ex: &lt;a href="https://github.com/ZupIT/ritchie-formulas">&lt;strong>ritchie-formulas&lt;/strong>&lt;/a>).&lt;/p>
&lt;p>Most of the community formulas are composed of a &lt;a href="https://github.com/ZupIT/ritchie-formulas/tree/master/demo/hello-world">&lt;strong>README file&lt;/strong>&lt;/a> explaining what the command does and how to run it.&lt;/p>
&lt;/div>
&lt;h2 id="next-steps">Next steps&lt;/h2>
&lt;p>In this section, you saw how to run formulas on Ritchie. To keep learning:&lt;/p>
&lt;p>ðŸ‘‰Check which formulas you can run using the following command:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">rit --help
&lt;/code>&lt;/pre>&lt;/div>&lt;p>ðŸ‘‰See &lt;a href="../../how-to-create-formulas">&lt;strong>how to create new formulas&lt;/strong>&lt;/a>.&lt;/p></description></item></channel></rss>