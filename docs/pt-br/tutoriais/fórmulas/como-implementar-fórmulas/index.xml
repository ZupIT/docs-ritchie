<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Ritchie – Como implementar fórmulas</title><link>https://zupit.github.io/pt-br/tutoriais/f%C3%B3rmulas/como-implementar-f%C3%B3rmulas/</link><description>Recent content in Como implementar fórmulas on Ritchie</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://zupit.github.io/pt-br/tutoriais/f%C3%B3rmulas/como-implementar-f%C3%B3rmulas/index.xml" rel="self" type="application/rss+xml"/><item><title>Tutoriais: Pasta de fórmula</title><link>https://zupit.github.io/pt-br/tutoriais/f%C3%B3rmulas/como-implementar-f%C3%B3rmulas/pasta-de-f%C3%B3rmula/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zupit.github.io/pt-br/tutoriais/f%C3%B3rmulas/como-implementar-f%C3%B3rmulas/pasta-de-f%C3%B3rmula/</guid><description>
&lt;hr>
&lt;h2 id="o-que-é-uma-pasta-de-fórmula-formula-folder">O que é uma pasta de fórmula (formula folder)?&lt;/h2>
&lt;p>Esta pasta contém arquivos com comportamento da fórmula.&lt;/p>
&lt;div class="alert alert-warning" role="alert">
A estrutura das pastas define os comandos tree, por isso &lt;strong>não é recomendando que você atualize o nome dessas pastas&lt;/strong>, ou inclua mais arquivos e/ou pastas, a menos que seja uma &lt;strong>pasta src/*.&lt;/strong>
&lt;/div>
&lt;p>Cada linguagem de programação possui suas próprias especificidades, mas a estrutura da fórmula é quase a mesma. Não importa em qual linguagem seja usada, ela irá conter:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:left">Arquivo&lt;/th>
&lt;th style="text-align:left">Descrição&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:left">&lt;code>config.json&lt;/code>&lt;/td>
&lt;td style="text-align:left">arquivo para configurar os parâmetros de entrada da fórmula.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;code>main file&lt;/code>&lt;/td>
&lt;td style="text-align:left">arquivo para extrair variáveis locais.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;code>pkg/formula file&lt;/code>&lt;/td>
&lt;td style="text-align:left">arquivo para implementar a operação da fórmula.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;code>Dockerfile&lt;/code>&lt;/td>
&lt;td style="text-align:left">arquivo para &amp;ldquo;buildar&amp;rdquo; imagens no Docker.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;code>README file&lt;/code>&lt;/td>
&lt;td style="text-align:left">arquivo para explicar o que faz uma fórmula.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;code>Makefile file&lt;/code>&lt;/td>
&lt;td style="text-align:left">arquivo para compilar o código da fórmula (&lt;em>será depreciado em 03/2021&lt;/em>).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;code>build.sh file&lt;/code>&lt;/td>
&lt;td style="text-align:left">arquivo para compilar o código da fórmula em shell&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;code>metadata.json file&lt;/code>&lt;/td>
&lt;td style="text-align:left">arquivo para &amp;ldquo;taguear&amp;rdquo; informações de uma fórmula&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;code>set_unmask.sh file&lt;/code>&lt;/td>
&lt;td style="text-align:left">arquivo usado pelo &lt;code>Makefile file&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;code>help.json files&lt;/code>&lt;/td>
&lt;td style="text-align:left">arquivos usados para configurar mensagens de ajuda da fórmula no CLI.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>Você pode encontrar todos os &lt;a href="https://github.com/ZupIT/ritchie-formulas/tree/master/templates/create_formula/languages">&lt;strong>templates de linguagens&lt;/strong>&lt;/a> no repositório ritchie-formulas.&lt;/p>
&lt;h3 id="exemplos-de-pastas-de-fórmulas">Exemplos de pastas de fórmulas&lt;/h3>
&lt;div class='code-tabs'>
&lt;ul class="nav nav-tabs">&lt;/ul>
&lt;div class="tab-content">
&lt;div class="tab-pane" title="">
&lt;p>&lt;img src="https://zupit.github.io/go%20%281%29%20%281%29%20%281%29.png" alt="">&lt;/p>
&lt;p>De acordo com a imagem acima, você deve editar os arquivos:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>config.json:&lt;/strong> alterar os &lt;em>&lt;strong>inputs&lt;/strong>&lt;/em> e suas configurações.&lt;/li>
&lt;li>&lt;strong>main.go:&lt;/strong> extrair os inputs, e chamar os métodos da fórmula (na pasta &lt;strong>formula/*&lt;/strong>).&lt;/li>
&lt;li>&lt;strong>formula/*:&lt;/strong> implementar a lógica da fórmula.&lt;/li>
&lt;li>&lt;strong>help.json:&lt;/strong> alterar a mensagem de descrição do comando ou sub-comando.&lt;/li>
&lt;/ul>
&lt;/div>
&lt;div class="tab-pane" title="">
&lt;p>&lt;img src="https://zupit.github.io/java%20%282%29%20%282%29%20%282%29.png" alt="">&lt;/p>
&lt;p>De acordo com a imagem acima, você deve editar os arquivos:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>config.json:&lt;/strong> alterar os &lt;em>&lt;strong>inputs&lt;/strong>&lt;/em> e suas configurações.&lt;/li>
&lt;li>&lt;strong>main.java:&lt;/strong> extrair os inputs, e chamar os métodos da fórmula (na pasta &lt;strong>formula/*&lt;/strong>).&lt;/li>
&lt;li>&lt;strong>formula/*:&lt;/strong> implementar a lógica da fórmula.&lt;/li>
&lt;li>&lt;strong>help.json:&lt;/strong> alterar a mensagem de descrição do comando ou sub-comando.&lt;/li>
&lt;/ul>
&lt;/div>
&lt;div class="tab-pane" title="">
&lt;p>&lt;img src="https://zupit.github.io/node%20%283%29%20%283%29%20%282%29.png" alt="">&lt;/p>
&lt;p>De acordo com a imagem acima, você deve editar os arquivos:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>config.json:&lt;/strong> alterar os &lt;em>&lt;strong>inputs&lt;/strong>&lt;/em> e suas configurações.&lt;/li>
&lt;li>&lt;strong>index.js:&lt;/strong> extrair os inputs, e chamar os métodos da fórmula (na pasta &lt;strong>formula/*&lt;/strong>).&lt;/li>
&lt;li>&lt;strong>formula/*:&lt;/strong> implementar a lógica da fórmula.&lt;/li>
&lt;li>&lt;strong>help.json:&lt;/strong> alterar a mensagem de descrição do comando ou sub-comando.&lt;/li>
&lt;/ul>
&lt;/div>
&lt;div class="tab-pane" title="">
&lt;p>&lt;img src="https://zupit.github.io/python%20%282%29%20%281%29.png" alt="">&lt;/p>
&lt;p>De acordo com a imagem acima, você deve editar os arquivos:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>config.json:&lt;/strong> alterar os &lt;em>&lt;strong>inputs&lt;/strong>&lt;/em> e suas configurações.&lt;/li>
&lt;li>&lt;strong>main.py:&lt;/strong> extrair os inputs, e chamar os métodos da fórmula (na pasta &lt;strong>formula/*&lt;/strong>).&lt;/li>
&lt;li>&lt;strong>formula/*:&lt;/strong> implementar a lógica da fórmula.&lt;/li>
&lt;li>&lt;strong>help.json:&lt;/strong> alterar a mensagem de descrição do comando ou sub-comando.&lt;/li>
&lt;/ul>
&lt;/div>
&lt;div class="tab-pane" title="">
&lt;p>&lt;img src="https://zupit.github.io/shell%20%282%29%20%281%29%20%281%29.png" alt="">&lt;/p>
&lt;p>De acordo com a imagem acima, você deve editar os arquivos:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>config.json:&lt;/strong> alterar os &lt;em>&lt;strong>inputs&lt;/strong>&lt;/em> e suas configurações.&lt;/li>
&lt;li>&lt;strong>main.sh:&lt;/strong> extrair os inputs, e chamar os métodos da fórmula (na pasta &lt;strong>formula/*&lt;/strong>).&lt;/li>
&lt;li>&lt;strong>formula/*:&lt;/strong> implementar a lógica da fórmula.&lt;/li>
&lt;li>&lt;strong>help.json:&lt;/strong> alterar a mensagem de descrição do comando ou sub-comando.&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="alert alert-warning" role="alert">
As pastas e suas respectivas estruturas são o que definem o comando, então não é indicado alterar os nomes ou incluir mais pastas/arquivos &lt;strong>que não estejam dentro da pasta src/*&lt;/strong>.
&lt;/div></description></item><item><title>Tutoriais: Arquivo Config</title><link>https://zupit.github.io/pt-br/tutoriais/f%C3%B3rmulas/como-implementar-f%C3%B3rmulas/arquivo-config/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zupit.github.io/pt-br/tutoriais/f%C3%B3rmulas/como-implementar-f%C3%B3rmulas/arquivo-config/</guid><description>
&lt;hr>
&lt;h2 id="o-que-é-um-arquivo-config-configjson-file">O que é um arquivo config (config.json file)?&lt;/h2>
&lt;p>O arquivo config.json contém os parâmetros de entrada da fórmula. Ele permite que o CLI saiba quais dados devem ser pedidos ao usuário quando ele executa o comando no terminal, a fim de que processe a fórmula corretamente.&lt;/p>
&lt;p>Essas entradas são feitas para os seguintes campos:&lt;/p>
&lt;ul>
&lt;li>Uma &lt;strong>imagem para buildar o docker&lt;/strong> (de acordo com a linguagem de programação escolhida para criar a fórmula)&lt;/li>
&lt;li>A lista com os parâmetros de entrada de uma fórmula.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">{
&amp;#34;dockerImageBuilder&amp;#34;: &amp;#34;dockerImage&amp;#34;,
&amp;#34;inputs&amp;#34;: []
}
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="configuração-dos-parâmetros-de-entrada">Configuração dos parâmetros de entrada&lt;/h2>
&lt;p>Cada parâmetro de entrada é composto pelos seguintes campos:&lt;/p>
&lt;h3 id="campos-obrigatórios">Campos obrigatórios&lt;/h3>
&lt;ul>
&lt;li>&lt;code>name&lt;/code>: nome da variável para extração.&lt;/li>
&lt;/ul>
&lt;div class="alert alert-warning" role="alert">
&lt;p>Uma vez que o valor de um parâmetro de entrada é informado no Ritchie CLI, ele é salvo como uma &lt;strong>variável local&lt;/strong> durante a execução da fórmula.&lt;/p>
&lt;p>O nome da variável será convertida em maiúscula como o nome da variável local.&lt;/p>
&lt;/div>
&lt;blockquote>
&lt;p>Uma boa prática é adicionar o sufixo &lt;em>&lt;strong>&lt;code>RIT_&lt;/code>&lt;/strong>&lt;/em> para cada &lt;strong>&lt;code>input name&lt;/code>&lt;/strong> para evitar conflitos com variáveis locais.&lt;/p>
&lt;p>Exemplo_: &lt;code>rit_file_name&lt;/code> &amp;ndash;&amp;gt; &lt;code>RIT_FILE_NAME&lt;/code>_&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>&lt;code>type&lt;/code>:
&lt;ul>
&lt;li>&lt;strong>text&lt;/strong> (string),&lt;/li>
&lt;li>&lt;strong>bool&lt;/strong> (boolean),&lt;/li>
&lt;li>&lt;strong>password&lt;/strong> (string escondida no CLI),&lt;/li>
&lt;li>&lt;strong>credentials&lt;/strong> __(tipo específico, veja mais sobre &lt;a href="https://docs.ritchiecli.io/tutorials/credentials#how-to-use-credentials-as-formula-inputs">&lt;strong>aqui&lt;/strong>&lt;/a>)&lt;/li>
&lt;li>&lt;strong>dynamic&lt;/strong> (associado ao campo opcional&lt;code>request_info&lt;/code>)&lt;/li>
&lt;li>&lt;strong>path:&lt;/strong> habilita o &lt;code>autocomplete&lt;/code> para o usuário informar o passo para uma pasta ou um arquivo (string).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>label&lt;/code>: texto que aparecerá no CLI para pedir o input ao usuário.&lt;/li>
&lt;/ul>
&lt;h4 id="exemplo-de-parâmetro-de-entrada-com-campos-obrigatórios">Exemplo de parâmetro de entrada com campos obrigatórios:&lt;/h4>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">{
&amp;#34;label&amp;#34;: &amp;#34;Type your name:&amp;#34;,
&amp;#34;name&amp;#34;: &amp;#34;rit_name&amp;#34;,
&amp;#34;type&amp;#34;: &amp;#34;text&amp;#34;,
}
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="exemplo-de-parâmetro-de-entrada-com-o-tipo-multiselect">Exemplo de parâmetro de entrada com o tipo multiselect:&lt;/h4>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">{
&amp;#34;label&amp;#34;: &amp;#34;Choose one or more days: &amp;#34;,
&amp;#34;name&amp;#34;: &amp;#34;rit_days&amp;#34;,
&amp;#34;type&amp;#34;: &amp;#34;multiselect&amp;#34;,
&amp;#34;required&amp;#34;: true,
&amp;#34;items&amp;#34;: [
&amp;#34;Monday&amp;#34;,
&amp;#34;Tuesday&amp;#34;,
&amp;#34;Wednesday&amp;#34;,
&amp;#34;Thursday&amp;#34;,
&amp;#34;Friday&amp;#34;,
&amp;#34;Saturday&amp;#34;,
&amp;#34;Friday&amp;#34;
]
}
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="algumas-observações-a-respeito-o-tipo-multiselect">Algumas observações a respeito o tipo &lt;strong>&lt;code>multiselect&lt;/code>&lt;/strong>&lt;/h4>
&lt;ul>
&lt;li>Para selecionar uma das opções com tipo &lt;code>multiselect&lt;/code>, você deve apertar a chave &lt;code>space&lt;/code> (a chave&lt;code>enter&lt;/code> irá mover para o próximo parâmetro de entrada, se houver)&lt;/li>
&lt;li>As opções selecionadas no campo do tipo &lt;code>multiselect&lt;/code> irão retornar uma string com as opções separadas por barra (&lt;code>|&lt;/code>) e sem espaço, por exemplo: &lt;code>Monday | Wednesday | Friday&lt;/code>&lt;/li>
&lt;li>É sugerido que você use o campo &lt;code>obrigatório&lt;/code> como&lt;code>true&lt;/code>, caso contrário, se não houver uma opção selecionada, a variável local será salva como &lt;code>undefined&lt;/code> .&lt;/li>
&lt;/ul>
&lt;h4 id="exemplo-de-parâmetro-de-entrada-usando-o-tipo-autocomplete">Exemplo de parâmetro de entrada usando o tipo autocomplete:&lt;/h4>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">{
&amp;#34;label&amp;#34;: &amp;#34;Type the path to the folder with your file:&amp;#34;,
&amp;#34;name&amp;#34;: &amp;#34;rit_path&amp;#34;,
&amp;#34;type&amp;#34;: &amp;#34;path&amp;#34;,
}
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="campos-opcionais">Campos opcionais&lt;/h3>
&lt;ul>
&lt;li>&lt;code>default&lt;/code>: valor padrão do parâmetro (se nulo).&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">{
&amp;#34;label&amp;#34;: &amp;#34;Type your name:&amp;#34;,
&amp;#34;name&amp;#34;: &amp;#34;rit_name&amp;#34;,
&amp;#34;type&amp;#34;: &amp;#34;text&amp;#34;,
&amp;#34;default&amp;#34;: &amp;#34;Dennis&amp;#34;
}
&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-info" role="alert">
&lt;p>Você pode ainda fazer essa configuração default com a flag default, que te permite atribuir valores default configurados na fórmula.&lt;/p>
&lt;p>Caso não haja campos com valor default, a flag continuará perguntando por parâmetros de entrada que devem ser configurados no seu arquivo config.json.&lt;/p>
&lt;/div>
&lt;ul>
&lt;li>&lt;code>required&lt;/code>: boolean que indica se um campo é obrigatório ou opcional.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">{
&amp;#34;label&amp;#34;: &amp;#34;Type your name:&amp;#34;,
&amp;#34;name&amp;#34;: &amp;#34;rit_name&amp;#34;,
&amp;#34;type&amp;#34;: &amp;#34;text&amp;#34;,
&amp;#34;required&amp;#34;: true
}
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;code>tutorial&lt;/code>: campo de ajuda para o parâmetro de entrada &lt;em>[? for help]&lt;/em>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">{
&amp;#34;label&amp;#34;: &amp;#34;Type your name:&amp;#34;,
&amp;#34;name&amp;#34;: &amp;#34;rit_name&amp;#34;,
&amp;#34;type&amp;#34;: &amp;#34;text&amp;#34;,
&amp;#34;tutorial&amp;#34;: &amp;#34;We are expecting you to write your name (ex: John)&amp;#34;
}
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;code>items&lt;/code>: lista de opções para o parâmetro.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">{
&amp;#34;label&amp;#34;: &amp;#34;Type your name:&amp;#34;,
&amp;#34;name&amp;#34;: &amp;#34;rit_name&amp;#34;,
&amp;#34;type&amp;#34;: &amp;#34;text&amp;#34;,
&amp;#34;items&amp;#34;: [
&amp;#34;Dennis&amp;#34;,
&amp;#34;John&amp;#34;,
&amp;#34;Bill&amp;#34;
]
}
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;code>cache&lt;/code>: salva valores de parâmetros de entrada anteriores.
&lt;ul>
&lt;li>&lt;code>active&lt;/code>: se o cache é habilitado ou não.&lt;/li>
&lt;li>&lt;code>qty&lt;/code>: quantidade de valor armazenadas no cache.&lt;/li>
&lt;li>&lt;code>newLabel&lt;/code>: texto que aparecerá no CLI para pedir um novo input ao usuário.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">{
&amp;#34;label&amp;#34;: &amp;#34;Type your name:&amp;#34;,
&amp;#34;name&amp;#34;: &amp;#34;rit_name&amp;#34;,
&amp;#34;type&amp;#34;: &amp;#34;text&amp;#34;,
&amp;#34;cache&amp;#34;: {
&amp;#34;active&amp;#34;: true,
&amp;#34;qty&amp;#34;: 5,
&amp;#34;newLabel&amp;#34;: &amp;#34;Type another name:&amp;#34;
}
}
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;code>condition&lt;/code>: esse parâmetro só aparece se condicional funcionar
&lt;ul>
&lt;li>&lt;code>variable&lt;/code>: o nome da variável usada em um parâmetro anterior para comparação.&lt;/li>
&lt;li>&lt;code>operator&lt;/code>: o operador lógico usado para comparar. Suporta &lt;code>==&lt;/code>, &lt;code>!=&lt;/code>, &lt;code>&amp;lt;&lt;/code>, &lt;code>&amp;gt;&lt;/code>, &lt;code>&amp;lt;=&lt;/code>, and &lt;code>&amp;gt;=&lt;/code>&lt;/li>
&lt;li>&lt;code>value&lt;/code>: o valor que se deseja usar para comparação.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">{
&amp;#34;label&amp;#34;: &amp;#34;Type your name:&amp;#34;,
&amp;#34;name&amp;#34;: &amp;#34;rit_name&amp;#34;,
&amp;#34;type&amp;#34;: &amp;#34;text&amp;#34;,
&amp;#34;default&amp;#34;: &amp;#34;Dennis&amp;#34;
},
{
&amp;#34;condition&amp;#34;: {
&amp;#34;variable&amp;#34;: &amp;#34;rit_name&amp;#34;,
&amp;#34;operator&amp;#34;: &amp;#34;!=&amp;#34;,
&amp;#34;value&amp;#34;: &amp;#34;Dennis&amp;#34;
}
&amp;#34;label&amp;#34;: &amp;#34;What is your date of birth?&amp;#34;,
&amp;#34;name&amp;#34;: &amp;#34;rit_date_of_birth&amp;#34;,
&amp;#34;type&amp;#34;: &amp;#34;text&amp;#34;,
}
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;code>pattern&lt;/code>: configura a validação de um parâmetro de entrada.
&lt;ul>
&lt;li>&lt;code>regex&lt;/code>: o modelo regex para validar o parâmetro.&lt;/li>
&lt;li>&lt;code>mismatchText&lt;/code>: a mensagem de erro caso o parâmetro de entrada seja invalidado pelo regex.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">{
&amp;#34;label&amp;#34;: &amp;#34;What is your age&amp;#34;,
&amp;#34;name&amp;#34;: &amp;#34;rit_age&amp;#34;,
&amp;#34;type&amp;#34;: &amp;#34;text&amp;#34;,
&amp;#34;pattern&amp;#34;: {
&amp;#34;regex&amp;#34;: &amp;#34;[0-9]&amp;#34;,
&amp;#34;mismatchText&amp;#34;: &amp;#34;Only a integer value is allowed here (ex: 20)&amp;#34;
}
}
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;code>requestInfo&lt;/code>: configuração para ter o parâmetro de entrada de tipo dinâmico.
&lt;ul>
&lt;li>&lt;code>url&lt;/code>: URL que consome o serviço GET, responsável por retornar a lista de objetos.&lt;/li>
&lt;li>&lt;code>jsonPath&lt;/code>: caminho da variável para extrair da lista retornada uma variável de cada objeto. (Veja mais sobre &lt;a href="https://goessner.net/articles/JsonPath/">&lt;strong>como funciona esse path json&lt;/strong>&lt;/a>).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">{
&amp;#34;label&amp;#34;: &amp;#34;Type your name:&amp;#34;,
&amp;#34;name&amp;#34;: &amp;#34;rit_name&amp;#34;,
&amp;#34;type&amp;#34;: &amp;#34;text&amp;#34;,
&amp;#34;requestInfo&amp;#34;: {
&amp;#34;url&amp;#34;: &amp;#34;https://my-url.com&amp;#34;,
&amp;#34;jsonPath&amp;#34;: $[&amp;#39;user&amp;#39;][&amp;#39;name&amp;#39;]
}
}
&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-info" role="alert">
Cada fórmula contém quantos parâmetros de entrada forem necessários, assim como qualquer associação nos campos acima.
&lt;/div>
&lt;p>&lt;strong>Exemplo de parâmetros de entrada com campo condicional e padrão Regex:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">&amp;#34;inputs&amp;#34;: [
{
&amp;#34;label&amp;#34;: &amp;#34;Select a system:&amp;#34;,
&amp;#34;name&amp;#34;: &amp;#34;rit_system&amp;#34;,
&amp;#34;type&amp;#34;: &amp;#34;text&amp;#34;,
&amp;#34;items&amp;#34;: [
&amp;#34;LINUX&amp;#34;,
&amp;#34;MACOS&amp;#34;,
&amp;#34;WINDOWS&amp;#34;
],
&amp;#34;required&amp;#34;: true,
&amp;#34;tutorial&amp;#34;: &amp;#34;Select a System from the list.&amp;#34;
},
{
&amp;#34;condition&amp;#34;: {
&amp;#34;variable&amp;#34;:&amp;#34;rit_system&amp;#34;,
&amp;#34;operator&amp;#34;:&amp;#34;==&amp;#34;,
&amp;#34;value&amp;#34;:&amp;#34;LINUX&amp;#34;
},
&amp;#34;label&amp;#34;: &amp;#34;Select a LINUX OS:&amp;#34;,
&amp;#34;name&amp;#34;: &amp;#34;rit_linux_os&amp;#34;,
&amp;#34;type&amp;#34;: &amp;#34;text&amp;#34;,
&amp;#34;items&amp;#34;: [
&amp;#34;UBUNTU&amp;#34;,
&amp;#34;FEDORA&amp;#34;,
&amp;#34;CENTOS&amp;#34;
],
&amp;#34;pattern&amp;#34;: {
&amp;#34;regex&amp;#34;: &amp;#34;UBUNTU|FEDORA|CENTOS&amp;#34;,
&amp;#34;mismatchText&amp;#34;: &amp;#34;Invalid option&amp;#34;
},
&amp;#34;required&amp;#34;: false,
&amp;#34;tutorial&amp;#34;: &amp;#34;Select an Linux Operating System from the list.&amp;#34;
}
]
&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-warning" role="alert">
Uma vez que o valor de um parâmetro de entrada é informado no Ritchie CLI, ele é salvo como uma &lt;strong>variável local&lt;/strong> durante a execução da fórmula.
&lt;/div></description></item><item><title>Tutoriais: Arquivo Main</title><link>https://zupit.github.io/pt-br/tutoriais/f%C3%B3rmulas/como-implementar-f%C3%B3rmulas/arquivo-main/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zupit.github.io/pt-br/tutoriais/f%C3%B3rmulas/como-implementar-f%C3%B3rmulas/arquivo-main/</guid><description>
&lt;hr>
&lt;h2 id="o-que-é-um-arquivo-main-main-file-a-idwhat-is-the-main-filea">O que é um arquivo main (main file)? &lt;a id="what-is-the-main-file">&lt;/a>&lt;/h2>
&lt;div class="alert alert-info" role="alert">
&lt;p>O arquivo Main é usado para extrair os parâmetros de entrada informados no arquivo config.json, salvos como variáveis locais.&lt;/p>
&lt;p>&lt;em>Os parâmetros de entrada são extraídos pelo nome do campo informado no arquivo config.json em letras maiúsculas.&lt;/em>&lt;/p>
&lt;/div>
&lt;p>Esse arquivo é também onde estão as funções da fórmula, manipulando parâmetros de entrada, que são chamados para realizar uma operação e/ou automação da fórmula.&lt;/p>
&lt;h3 id="exemplos-de-arquivo-main-a-idmain-file-examplesa">Exemplos de arquivo Main &lt;a id="main-file-examples">&lt;/a>&lt;/h3>
&lt;p>Nos exemplos abaixo, sempre há a classe de uma fórmula com uma função &lt;code>Run()&lt;/code> .&lt;/p>
&lt;div class='code-tabs'>
&lt;ul class="nav nav-tabs">&lt;/ul>
&lt;div class="tab-content">
&lt;div class="tab-pane" title="">
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text"> input2 := os.Getenv(&amp;#34;INPUT_LIST&amp;#34;)
input3, _ := strconv.ParseBool(os.Getenv(&amp;#34;INPUT_BOOLEAN&amp;#34;))
input4 := os.Getenv(&amp;#34;INPUT_PASSWORD&amp;#34;)
formula.Formula{
Text: input1,
List: input2,
Boolean: input3,
Password: input4,
}.Run(os.Stdout)
}
&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;div class="tab-pane" title="">
&lt;pre>&lt;code>public class Main {
public static void main(String[] args) {
String inputText = System.getenv(&amp;quot;INPUT_TEXT&amp;quot;);
boolean inputBoolean = Boolean.parseBoolean(System.getenv(&amp;quot;INPUT_BOOLEAN&amp;quot;));
String inputList = System.getenv(&amp;quot;INPUT_LIST&amp;quot;);
String inputPassword = System.getenv(&amp;quot;INPUT_PASSWORD&amp;quot;);
Formula formula = new Formula(
inputText,
inputBoolean,
inputList,
inputPassword
);
formula.Run();
}
}
&lt;/code>&lt;/pre>
&lt;/div>
&lt;div class="tab-pane" title="">
&lt;pre>&lt;code>const INPUT1 = process.env.INPUT_TEXT
const INPUT2 = process.env.INPUT_BOOLEAN
const INPUT3 = process.env.INPUT_LIST
const INPUT4 = process.env.INPUT_PASSWORD
run(INPUT1, INPUT2, INPUT3, INPUT4)
&lt;/code>&lt;/pre>
&lt;/div>
&lt;div class="tab-pane" title="">
&lt;pre>&lt;code>input1 = os.environ.get(&amp;quot;INPUT_TEXT&amp;quot;)
input2 = os.environ.get(&amp;quot;INPUT_BOOLEAN&amp;quot;)
input3 = os.environ.get(&amp;quot;INPUT_LIST&amp;quot;)
input4 = os.environ.get(&amp;quot;INPUT_PASSWORD&amp;quot;)
formula.Run(input1, input2, input3, input4)
&lt;/code>&lt;/pre>
&lt;/div>
&lt;div class="tab-pane" title="">
&lt;pre>&lt;code>//Inputs are not even necessary here, as Shellscript get values from local variables directly.
runFormula '$SAMPLE_TEXT' $SAMPLE_LIST '$SAMPLE_BOOL''$SAMPLE_PASSWORD'
&lt;/code>&lt;/pre>
&lt;/div>
&lt;/div>
&lt;/div></description></item><item><title>Tutoriais: Dependências</title><link>https://zupit.github.io/pt-br/tutoriais/f%C3%B3rmulas/como-implementar-f%C3%B3rmulas/depend%C3%AAncias/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zupit.github.io/pt-br/tutoriais/f%C3%B3rmulas/como-implementar-f%C3%B3rmulas/depend%C3%AAncias/</guid><description>
&lt;hr>
&lt;h2 id="o-que-são-as-dependências">O que são as dependências?&lt;/h2>
&lt;div class="alert alert-info" role="alert">
Cada linguagem de programação possui suas próprias especificidades para &lt;strong>importar bibliotecas ou pacotes&lt;/strong>.
&lt;/div>
&lt;p>No Ritchie, é possível configurar cada fórmula como um projeto pequeno e independente. Portanto, é possível importar todas as dependências necessárias para performar as operações que você deseja implementar. .&lt;/p>
&lt;div class='code-tabs'>
&lt;ul class="nav nav-tabs">&lt;/ul>
&lt;div class="tab-content">
&lt;div class="tab-pane" title="">
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">module formula
go 1.14
require (
github.com/gookit/color v1.2.5
)
&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;div class="tab-pane" title="">
&lt;pre>&lt;code>&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&amp;lt;project xmlns=&amp;quot;http://maven.apache.org/POM/4.0.0&amp;quot; xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot;
xsi:schemaLocation=&amp;quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&amp;quot;&amp;gt;
&amp;lt;modelVersion&amp;gt;4.0.0&amp;lt;/modelVersion&amp;gt;
&amp;lt;groupId&amp;gt;com.ritchie&amp;lt;/groupId&amp;gt;
&amp;lt;artifactId&amp;gt;formula&amp;lt;/artifactId&amp;gt;
&amp;lt;version&amp;gt;1.0-SNAPSHOT&amp;lt;/version&amp;gt;
&amp;lt;properties&amp;gt;
&amp;lt;java.version&amp;gt;1.8&amp;lt;/java.version&amp;gt;
&amp;lt;maven.compiler.source&amp;gt;${java.version}&amp;lt;/maven.compiler.source&amp;gt;
&amp;lt;maven.compiler.target&amp;gt;${java.version}&amp;lt;/maven.compiler.target&amp;gt;
&amp;lt;project.build.sourceEncoding&amp;gt;UTF-8&amp;lt;/project.build.sourceEncoding&amp;gt;
&amp;lt;maven-jar-plugin.version&amp;gt;3.2.0&amp;lt;/maven-jar-plugin.version&amp;gt;
&amp;lt;/properties&amp;gt;
&amp;lt;build&amp;gt;
&amp;lt;finalName&amp;gt;Main&amp;lt;/finalName&amp;gt;
&amp;lt;plugins&amp;gt;
&amp;lt;plugin&amp;gt;
&amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;
&amp;lt;artifactId&amp;gt;maven-compiler-plugin&amp;lt;/artifactId&amp;gt;
&amp;lt;version&amp;gt;3.8.1&amp;lt;/version&amp;gt;
&amp;lt;configuration&amp;gt;
&amp;lt;source&amp;gt;1.8&amp;lt;/source&amp;gt;
&amp;lt;target&amp;gt;1.8&amp;lt;/target&amp;gt;
&amp;lt;/configuration&amp;gt;
&amp;lt;/plugin&amp;gt;
&amp;lt;plugin&amp;gt;
&amp;lt;!-- Build an executable JAR --&amp;gt;
&amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;
&amp;lt;artifactId&amp;gt;maven-jar-plugin&amp;lt;/artifactId&amp;gt;
&amp;lt;version&amp;gt;${maven-jar-plugin.version}&amp;lt;/version&amp;gt;
&amp;lt;configuration&amp;gt;
&amp;lt;archive&amp;gt;
&amp;lt;manifest&amp;gt;
&amp;lt;!-- &amp;lt;addClasspath&amp;gt;true&amp;lt;/addClasspath&amp;gt; --&amp;gt;
&amp;lt;mainClass&amp;gt;com.ritchie.Main&amp;lt;/mainClass&amp;gt;
&amp;lt;/manifest&amp;gt;
&amp;lt;/archive&amp;gt;
&amp;lt;/configuration&amp;gt;
&amp;lt;/plugin&amp;gt;
&amp;lt;plugin&amp;gt;
&amp;lt;artifactId&amp;gt;maven-assembly-plugin&amp;lt;/artifactId&amp;gt;
&amp;lt;configuration&amp;gt;
&amp;lt;appendAssemblyId&amp;gt;false&amp;lt;/appendAssemblyId&amp;gt;
&amp;lt;archive&amp;gt;
&amp;lt;manifest&amp;gt;
&amp;lt;mainClass&amp;gt;com.ritchie.Main&amp;lt;/mainClass&amp;gt;
&amp;lt;/manifest&amp;gt;
&amp;lt;/archive&amp;gt;
&amp;lt;descriptorRefs&amp;gt;
&amp;lt;descriptorRef&amp;gt;jar-with-dependencies&amp;lt;/descriptorRef&amp;gt;
&amp;lt;/descriptorRefs&amp;gt;
&amp;lt;/configuration&amp;gt;
&amp;lt;executions&amp;gt;
&amp;lt;execution&amp;gt;
&amp;lt;id&amp;gt;make-assembly&amp;lt;/id&amp;gt;
&amp;lt;phase&amp;gt;package&amp;lt;/phase&amp;gt;
&amp;lt;goals&amp;gt;
&amp;lt;goal&amp;gt;single&amp;lt;/goal&amp;gt;
&amp;lt;/goals&amp;gt;
&amp;lt;/execution&amp;gt;
&amp;lt;/executions&amp;gt;
&amp;lt;/plugin&amp;gt;
&amp;lt;/plugins&amp;gt;
&amp;lt;/build&amp;gt;
&amp;lt;dependencies&amp;gt;
&amp;lt;dependency&amp;gt;
&amp;lt;groupId&amp;gt;junit&amp;lt;/groupId&amp;gt;
&amp;lt;artifactId&amp;gt;junit&amp;lt;/artifactId&amp;gt;
&amp;lt;version&amp;gt;4.13.1&amp;lt;/version&amp;gt;
&amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;
&amp;lt;/dependency&amp;gt;
&amp;lt;dependency&amp;gt;
&amp;lt;groupId&amp;gt;com.github.tomas-langer&amp;lt;/groupId&amp;gt;
&amp;lt;artifactId&amp;gt;chalk&amp;lt;/artifactId&amp;gt;
&amp;lt;version&amp;gt;1.0.2&amp;lt;/version&amp;gt;
&amp;lt;/dependency&amp;gt;
&amp;lt;/dependencies&amp;gt;
&amp;lt;/project&amp;gt;
&lt;/code>&lt;/pre>
&lt;/div>
&lt;div class="tab-pane" title="">
&lt;pre>&lt;code>{
&amp;quot;dependencies&amp;quot;: {
&amp;quot;cli-color&amp;quot;: &amp;quot;^2.0.0&amp;quot;
},
&amp;quot;main&amp;quot;: &amp;quot;index.js&amp;quot;,
&amp;quot;scripts&amp;quot;: {
&amp;quot;test&amp;quot;: &amp;quot;echo \&amp;quot;Error: no test specified\&amp;quot; &amp;amp;&amp;amp; exit 1&amp;quot;
},
&amp;quot;version&amp;quot;: &amp;quot;1.0.0&amp;quot;
}
&lt;/code>&lt;/pre>
&lt;/div>
&lt;div class="tab-pane" title="">
&lt;pre>&lt;code>colored==1.4.2
&lt;/code>&lt;/pre>
&lt;/div>
&lt;div class="tab-pane" title="">
&lt;pre>&lt;code>{
&amp;quot;require&amp;quot;: {
&amp;quot;codedungeon/php-cli-colors&amp;quot;: &amp;quot;~1.0&amp;quot;
}
}
&lt;/code>&lt;/pre>
&lt;/div>
&lt;/div>
&lt;/div></description></item></channel></rss>