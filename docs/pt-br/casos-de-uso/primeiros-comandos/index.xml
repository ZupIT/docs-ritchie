<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Ritchie – Primeiros comandos</title><link>https://zupit.github.io/pt-br/casos-de-uso/primeiros-comandos/</link><description>Recent content in Primeiros comandos on Ritchie</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://zupit.github.io/pt-br/casos-de-uso/primeiros-comandos/index.xml" rel="self" type="application/rss+xml"/><item><title>Casos De Uso: Contexto</title><link>https://zupit.github.io/pt-br/casos-de-uso/primeiros-comandos/contexto/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zupit.github.io/pt-br/casos-de-uso/primeiros-comandos/contexto/</guid><description>
&lt;hr>
&lt;h3 id="comando-context">&lt;strong>Comando Context&lt;/strong>&lt;/h3>
&lt;p>&lt;strong>Comandos:&lt;/strong> &lt;em>&lt;code>rit set context&lt;/code> + &lt;code>rit show context&lt;/code> + &lt;code>rit delete context&lt;/code>&lt;/em>&lt;/p>
&lt;p>&lt;img src="https://lh6.googleusercontent.com/nSp8JByYbWSojwR4LPk-itqC8Dt23bSmFWf6wzes-oKqRkOFspjGBqNiam8eEI3YOCBp67IQaPpPKZCqXQEiBG56rqyWIAChUdNO1thIdRA46MrNMH5McpCW0zoWOFxYMVkVx2eE" alt="">&lt;/p>
&lt;p>Estes comandos são dentro dos mais úteis e simples do core do Ritchie.&lt;/p>
&lt;ul>
&lt;li>O &lt;strong>set context:&lt;/strong> permite definir um contexto na sessão. Assim, informações que serão definidas dentro desse contexto poderão ser reaproveitadas executando outros comandos precisando desse input. Esse comando possui um cache caso seja necessário voltar a aplicar um contexto já usado anteriormente.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">➜ rit set context
✔ Type new context?
New context: qa
Set context successful!
&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-warning" role="alert">
&lt;p>O motivo desse comando existir é possibilitar ao usuário ter várias credenciais cadastradas (github, aws, etc…), portanto se ele tem credencial em dev, qa e prod, por exemplo, ele pode criar esses contextos e setar suas credenciais específicas para cada um.&lt;/p>
&lt;p>Quando é usado um novo context, todas as suas credenciais devem ser setadas novamente.&lt;/p>
&lt;/div>
&lt;ul>
&lt;li>O &lt;strong>show context&lt;/strong> permite conferir qual contexto está definido atualmente na sessão.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">➜ rit show context
Current context: qa
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>O &lt;strong>delete context:&lt;/strong> permite remover um contexto que foi definido na sessão (pode ser tanto um que está sendo usado no momento, ou um que foi configurado no set context anteriormente e ficou salvo no cache).&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">➜ rit delete context
✔ Current -&amp;gt; qa
✔ yes
Delete context successful!
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Casos De Uso: Credenciais</title><link>https://zupit.github.io/pt-br/casos-de-uso/primeiros-comandos/credenciais/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zupit.github.io/pt-br/casos-de-uso/primeiros-comandos/credenciais/</guid><description>
&lt;hr>
&lt;h2 id="definir-credenciais">&lt;strong>Definir Credenciais&lt;/strong>&lt;/h2>
&lt;p>Comando: &lt;strong>&lt;code>$ rit set credential&lt;/code>&lt;/strong>&lt;/p>
&lt;p>Este comando permite que você configure credenciais no Ritchie, de maneira que você não precisa informar o mesmo dado diversas vezes no terminal. Lembrando que, na &lt;a href="https://docs.ritchiecli.io/v/doc-portuguese/primeiros-passos/escolhendo-versao#versao-single">&lt;strong>Versão Single&lt;/strong>&lt;/a>, as credenciais são criptografadas localmente na sessão por meio da passphrase informada no&lt;a href="https://docs.ritchiecli.io/v/doc-portuguese/primeiros-passos/inicializacao#versao-single"> &lt;strong>processo de inicialização&lt;/strong>&lt;/a>. Já na &lt;a href="https://docs.ritchiecli.io/v/doc-portuguese/primeiros-passos/escolhendo-versao#versao-team">&lt;strong>Versão Team&lt;/strong>&lt;/a>, as credenciais são criptografadas na sessão online do &lt;strong>Keycloak&lt;/strong> através do &lt;strong>Vault&lt;/strong>.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">➜ rit set credential
Use the arrow keys to navigate: ↓ ↑ → ←
Profile to add credential:
▸ ME (for you)
OTHER (for another user)
ORG (for the organization)
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Cada um pode configurar suas próprias credenciais No caso da Versão Team, o admin do servidor pode também configurar credenciais para específicos usuários ou para toda a equipe.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">➜ rit set credential
✔ ME (for you)
Use the arrow keys to navigate: ↓ ↑ → ←
Provider:
▸ darwin
email-org
github
gitlab
jenkins
kubeconfig
aws
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Depois que você selecionar as opções para cada perfil, será necessário selecionar para qual provedor deseja adicioná-los. Esta lista será organizada dentro da pasta de configuração do servidor.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">➜ rit set credential
✔ ME (for you)
✔ github
Github username: user
Github token: *
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Uma vez que você selecionar o provider, ele irá solicitar as informações das credenciais selecionadas:&lt;/p>
&lt;p>&lt;img src="https://lh4.googleusercontent.com/_U93uVcs1Tu9TIUy59wuVfDCKgHbqO-lt5pPPSmlmDqwaFG1oew-nG_ntixSNFVRvmknMNca0X2G5WhYAowGS84V3Bf1OCZmurcCnK-Xkn9HZkf67ZWe6Jy6Wi2f9BNL6ggdO4sI" alt="">&lt;/p>
&lt;div class="alert alert-info" role="alert">
Confere na &lt;a href="https://docs.ritchiecli.io/v/doc-portuguese/referencia/servidor#configuracoes-de-credenciais">seção de configuração das credenciais&lt;/a> como manipular as credenciais definidas na sessão como parâmetros de entradas das fórmulas (inputs no arquivo config.json).
&lt;/div></description></item><item><title>Casos De Uso: Repositórios</title><link>https://zupit.github.io/pt-br/casos-de-uso/primeiros-comandos/reposit%C3%B3rios/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zupit.github.io/pt-br/casos-de-uso/primeiros-comandos/reposit%C3%B3rios/</guid><description>
&lt;hr>
&lt;h2 id="introdução">Introdução&lt;/h2>
&lt;p>Você pode ter acesso a mais de um repositório usando o Ritchie. Nos comandos abaixo, você encontra alguns recursos para gerenciar seu repo.&lt;/p>
&lt;h2 id="adicione-o-repositório-_commons_">Adicione o repositório &lt;em>Commons&lt;/em>&lt;/h2>
&lt;p>&lt;strong>As fórmulas da comunidade&lt;/strong> estão armazenadas dentro do projeto &lt;a href="https://github.com/ZupIT/ritchie-formulas">&lt;strong>ritchie-formulas&lt;/strong>&lt;/a> no &lt;strong>GitHub&lt;/strong>. Os comandos dessas fórmulas não aparecerão no helper do Ritchie executando o comando &lt;code>rit --help&lt;/code> enquanto o usuário não importará o tree.json do repositório.&lt;/p>
&lt;p>O &lt;strong>tree.json&lt;/strong> do repositório ritchie-formulas pode ser importando através da seguinte url :&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">https://commons-repo.ritchiecli.io/tree/tree.json
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Esse passo deve ser informado quando executar o comando &lt;code>rit add repo&lt;/code> para ser adicionado à árvore local do CLI.&lt;/p>
&lt;p>&lt;img src="https://zupit.github.io/rit-add-repo-min.gif" alt="Demonstra&amp;#xE7;&amp;#xE3;o de como adicionar os comandos do reposit&amp;#xF3;rio Commons ao Ritchie">&lt;/p>
&lt;p>Depois de adicionar o tree.json do novo repositório, os comandos executáveis das fórmulas são adicionadas ao &lt;em>helper&lt;/em> do Ritchie. Isso significa que eles estão agora disponíveis para o usuário.&lt;/p>
&lt;p>Ao adicionar um novo repositório, o usuário também pode escolher a prioridade do repositório em relação aos demais, dando prioridade às fórmulas desse repositório em vez de fórmulas que usam o mesmo comando executável em outro repositório. Dessa forma, quando a CLI criar a árvore principal, não permitirá nenhum comando duplicado, sempre mantendo aquele com a prioridade mais alta.&lt;/p>
&lt;div class="alert alert-warning" role="alert">
No momento é necessário adicionar esse repositório em ambas versões do Ritchie. Está planejado incluir esse repositório automaticamente na versão Single no futuro.
&lt;/div>
&lt;h2 id="adicione-outro-repositório">&lt;strong>Adicione outro&lt;/strong> repositório&lt;/h2>
&lt;p>Para adicionar outro repositório ao CLI, é possível seguir o mesmo processo descrito acima, exceto que é necessário ter o tree.json desse repositório armazenado em algum lugar para o Ritchie importá-lo da mesma maneira que foi feito para o projeto &lt;a href="https://github.com/ZupIT/ritchie-formulas">&lt;strong>ritchie-formulas&lt;/strong>&lt;/a>.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">➜ rit add repo
Name of the repository: community
URL of the tree [http(s)://host:port/tree.json]: https://commons-repo.ritchiecli.io/tree/tree.json
Priority [ps.: 0 is higher priority, the lower higher the priority] : 1
Repository added
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="atualizar-um-repositório">&lt;strong>Atualizar um&lt;/strong> repositório&lt;/h2>
&lt;p>É possível atualizar todos os repositórios depois de configurados, usando o comando &lt;code>rit update repo&lt;/code>. Esse comando atualizará os repositórios tree.json a partir da URL informada na adição dos repositórios.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">➜ rit update repo
Wait while we update your repositories...
...Successfully got an update from the &amp;#34;commons&amp;#34; formula repository
Done.
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="remover-um-repositório">&lt;strong>Remover&lt;/strong> um repositório&lt;/h2>
&lt;p>É possível remover do CLI a árvore de um repositório usando o comando &lt;code>rit delete repo&lt;/code>. O usuário precisará informar o nome que ele usou quando adicionou o repositório.&lt;/p>
&lt;p>É possível verificar o nome dos repositórios atuais usando o comando &lt;code>rit list repo&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">➜ rit list repo
NAME URL
commons https://commons-repo.ritchiecli.io/tree/tree.json
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://zupit.github.io/rit-delete-repo-min.gif" alt="Demonstra&amp;#xE7;&amp;#xE3;o de como remover a &amp;#xE1;rvore do reposit&amp;#xF3;rio Commons do Ritchie">&lt;/p>
&lt;h2 id="limpar-um-repositório">&lt;strong>Limpar&lt;/strong> um repositório&lt;/h2>
&lt;p>O comando &lt;code>rit clean repo&lt;/code> permite ao usuário remover o cache do repositório informado. Dessa forma, os comandos associados não aparecerão no preenchimento automático até importar o tree.json deste repositório novamente, a próxima vez que o usuário executar uma das fórmulas do repositório.&lt;/p></description></item></channel></rss>